
@model JIL_Attendance.Models.Admin_Event


@using (Ajax.BeginForm("Create", "Admin", null, new AjaxOptions() { OnSuccess = "getresult" }, null))
{
    @Html.AntiForgeryToken()
    @Html.Hidden("encryptchurch", ViewData["ChurchIDEncrypt"])
    @*@Html.Hidden("encryptseatNo", ViewData["SeatEncrypt"])*@
    <div class="modal-content">
        <div class="modal-header">
            <h5 class="modal-title" id="exampleModalLabel">Add Events</h5>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        </div>
        <div class="modal-body">
            <div class="form-horizontal">
                <div class="form-group">

                    <div class="form-group row">
                        @Html.Label("Event Name", htmlAttributes: new { @class = "col-md-3 control-label", @style = "font-weight:bold" })
                        <div class="col-md-9 form-control-static">
                            @Html.EditorFor(model => model.EventName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.EventName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group row">
                        @Html.Label("Event Date", htmlAttributes: new { @class = "col-md-3 control-label", @style = "font-weight:bold" })
                        <div class="col-md-9 form-control-static">
                            @Html.EditorFor(model => model.EventDate, new { htmlAttributes = new { @class = "form-control input-group date", @data_provide = "datepicker" } })
                            @Html.ValidationMessageFor(model => model.EventDate, "", new { @class = "text-danger" })
                        </div>
                    </div>
                 
                    <div class="form-group row">
                        @Html.Label("Start", htmlAttributes: new { @class = "col-md-3 control-label", @style = "font-weight:bold" })
                        <div class="col-md-9 form-control-static">
                            @Html.EditorFor(model => model.EventStart, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.EventStart, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.Label("End", htmlAttributes: new { @class = "col-md-3 control-label", @style = "font-weight:bold" })
                        <div class="col-md-9 form-control-static">
                            @Html.EditorFor(model => model.EventEnd, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.EventEnd, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row" id="gender">
                        @Html.Label("Status", htmlAttributes: new { @class = "col-md-3 control-label", @style = "font-weight:bold" })
                        <div class="col-md-8" id="gender">
                            <div class="custom-control custom-radio custom-control-inline">
                                @Html.RadioButtonFor(model => model.Status, "Open", new { @class = "custom-control-input", @id = "COpen" })
                                <label class="custom-control-label" for="COpen">Open</label>
                            </div>
                            <div class="custom-control custom-radio custom-control-inline">
                                @Html.RadioButtonFor(model => model.Status, "Close", new { @class = "custom-control-input", @id = "CClose" })
                                <label class="custom-control-label" for="CClose">Close</label>
                            </div>
                            <label class="radio-inline"> @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })</label>
                        </div>
                    </div>
                </div>


            </div>
            <div class="modal-footer">
                <input type="submit" value="Save" class="btn btn-success" />
                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
            </div>

        </div>
    </div>
}

<script type="text/javascript">
    $('.datepicker').datepicker();
    function getresult(data) {
        if (data.Save) {
            $("#CreateDialog").modal('hide');
            var notification = {
                type: "success",
                title: "Successfully",
                message: "Saved",
                icon: 'fas fa-check'
            };
            showNotification(notification);
        }
        updatePartial();
        //if (data.AlreadySaved) {
        //    var notification = {
        //        type: "danger",
        //        title: "Warning!",
        //        message: "Name already exist",
        //        icon: 'glyphicon glyphicon-exclamation-sign'
        //    };
        //    showNotification(notification);
        //}
    }

</script>
